import{db as e,dc as c,dd as n,U as u}from"./index-Cj37dcSI.js";import{a as y}from"./WebMap-fc1TbJfU.js";import"./ColorBackground-BjuRZr7Y.js";import"./CollectionFlattener-CryKIsXp.js";import"./basemapUtils-C3jzYIDE.js";import"./utils-DYmthu9k.js";import"./TablesMixin-BBsNayrZ.js";import"./Layer-l4keiRdm.js";import"./MultiOriginJSONSupport-BNoLIkV0.js";import"./portalItemUtils-DnmzdikO.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-CpoQ0m8x.js";import"./jsonContext-BjVda_2q.js";import"./project-Dy8d8yQq.js";import"./FeatureLayer-Ld3dL3zT.js";import"./commonProperties-Eq_gWgNE.js";import"./ElevationInfo-BuRwLjVB.js";import"./FeatureLayerBase-CCb26YWa.js";import"./HeightModelInfo-CFldRYbf.js";import"./featureLayerUtils-CUUv1YZ4.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-CAFYGBpi.js";import"./Relationship-BLCI3L73.js";import"./serviceCapabilitiesUtils-Cz6qkmAN.js";import"./editsZScale-DqoK4gWp.js";import"./APIKeyMixin-D8nq7REQ.js";import"./ArcGISService-BGskH1Nr.js";import"./BlendLayer-lNg5lQp1.js";import"./jsonUtils-rZaWLITc.js";import"./parser-vcRqrJ90.js";import"./CustomParametersMixin-yNDH4qbd.js";import"./EditBusLayer-1cAH5JER.js";import"./FeatureEffectLayer-BWwksBm5.js";import"./FeatureEffect-3ltnGeNO.js";import"./FeatureReductionLayer-BBkB24_s.js";import"./FeatureReductionSelection-DSlMsLTE.js";import"./labelingInfo-BD-9SYTm.js";import"./labelUtils-B_u6kgCj.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-osV1-0vs.js";import"./OrderedLayer-C522bCJ3.js";import"./OrderByInfo-DRNeihmW.js";import"./PortalLayer-CVzfRWOB.js";import"./RefreshableLayer-CaNfY9nD.js";import"./ScaleRangeLayer-DURziDnJ.js";import"./TemporalLayer-irvsAb22.js";import"./FeatureTemplate-BqQcc8_T.js";import"./FeatureType-zALEuuP8.js";import"./fieldProperties-Cxk3co2N.js";import"./versionUtils-CPP7JDru.js";import"./styleUtils-CLGtKHVY.js";import"./popupUtils-DPC_CFAG.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-9eA6tL8N.js";async function lt(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,f:"json"}),...p}),s=`${i.path}/trace`;return u(s,m).then(a=>f(a))}async function Jt(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,async:!0,f:"json"}),...p}),s=`${i.path}/trace`,{data:a}=await u(s,m);return a.statusUrl}function f(o){const{data:t}=o;return y.fromJSON(t.traceResults)}export{Jt as submitTraceJob,lt as trace};
//# sourceMappingURL=trace-0RhiXSis.js.map
