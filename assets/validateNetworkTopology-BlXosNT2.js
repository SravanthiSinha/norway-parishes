import{I as f,dc as d,dd as m,de as n,U as l}from"./index-BvuY3ppR.js";import{i as k}from"./WebMap-BO4SF9qF.js";import"./ColorBackground-Brvkjxqj.js";import"./CollectionFlattener-QrvHNFlP.js";import"./basemapUtils-HuBwIz9_.js";import"./TablesMixin-Dzvwj3m3.js";import"./MultiOriginJSONSupport-qT6YbIui.js";import"./portalItemUtils-CuT7pXs4.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-CZamNl-W.js";import"./jsonContext-BUfiYo8A.js";import"./project-CgZrk8U9.js";import"./FeatureLayer-CUWElQl-.js";import"./commonProperties-DPaToaxC.js";import"./FeatureLayerBase-BwFTkdV7.js";import"./HeightModelInfo-CN8OWJiA.js";import"./featureLayerUtils-CKSU1ldu.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-Yv77SVQR.js";import"./Relationship-BpbiUpxD.js";import"./serviceCapabilitiesUtils-DJpk8apz.js";import"./editsZScale-2QvHdO-L.js";import"./APIKeyMixin-C6qZkXmd.js";import"./ArcGISService-C0RXsBSE.js";import"./CustomParametersMixin-D0gtZkrL.js";import"./EditBusLayer-DzLN5ELJ.js";import"./FeatureEffectLayer-Kc8H8Tfp.js";import"./FeatureEffect-DMiM48V5.js";import"./FeatureReductionLayer-BtpQ8PjS.js";import"./FeatureReductionSelection-CjAo8zOe.js";import"./labelingInfo-C4KG-2j9.js";import"./labelUtils-BTgJgVoP.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-DypT4zYj.js";import"./OrderedLayer-BHaIYW01.js";import"./OrderByInfo-CNn0RTml.js";import"./PortalLayer-BIVieGhj.js";import"./RefreshableLayer-SGfQCDWe.js";import"./TemporalLayer-DKvPriGR.js";import"./FeatureTemplate-BnLGapc-.js";import"./FeatureType-CAtlLwrj.js";import"./fieldProperties-BiNIv32u.js";import"./versionUtils-ClYov0oe.js";import"./styleUtils-EB46Fgb3.js";import"./popupUtils-BiP7BDlO.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-vcsoVDVY.js";async function nt(i,t,a){const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s={...r,returnEdits:!0,f:"json"},p=n({...e.query,...s}),o=m(p,{...a,method:"post"}),u=`${e.path}/validateNetworkTopology`,{data:c}=await l(u,o);return k.fromJSON(v(c))}async function lt(i,t,a){if(!t.gdbVersion)throw new f("submit-validate-network-topology-job:missing-gdb-version","version is missing");const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s=m(e.query,{query:n({...r,returnEdits:!0,async:!0,f:"json"}),...a,method:"post"}),p=`${e.path}/validateNetworkTopology`,{data:o}=await l(p,s);return o?o.statusUrl:null}function v(i){return i.serviceEdits&&(i.serviceEdits=i.serviceEdits.map(t=>(t.editedFeatures.spatialReference&&(t.editedFeatures.spatialReference={wkid:t.editedFeatures.spatialReference.wkid,wkt:t.editedFeatures.spatialReference.wkt,wkt2:t.editedFeatures.spatialReference.wkt2,latestWkid:t.editedFeatures.spatialReference.latestWkid,latestVcsWkid:t.editedFeatures.spatialReference.latestVcsWkid,vcsWkid:t.editedFeatures.spatialReference.vcsWkid}),t={layerId:t.id,editedFeatures:t.editedFeatures}))),i}export{v as handleValidateNetworkTopologyResult,lt as submitValidateNetworkTopologyJob,nt as validateNetworkTopology};
//# sourceMappingURL=validateNetworkTopology-BlXosNT2.js.map
