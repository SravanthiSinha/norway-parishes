import{db as e,dc as c,dd as n,U as u}from"./index-XUmwAfbD.js";import{a as y}from"./WebMap-CeHmlPSh.js";import"./ColorBackground-Db1ESHNU.js";import"./CollectionFlattener-totJwnhh.js";import"./basemapUtils-D-YipfZ-.js";import"./utils-CXJkEfDz.js";import"./TablesMixin-DDYti3Ic.js";import"./Layer-B5mrXn3K.js";import"./MultiOriginJSONSupport-TXhd9nAR.js";import"./portalItemUtils-EEgQYIkq.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-BDtP0myK.js";import"./jsonContext-B4pQgmZ3.js";import"./project-BFBh7UwU.js";import"./FeatureLayer-BouGm6jC.js";import"./commonProperties-D13FKckC.js";import"./ElevationInfo-z6ZU5G2f.js";import"./FeatureLayerBase-Chjkji4I.js";import"./HeightModelInfo-Cf5Fyha2.js";import"./featureLayerUtils-DUVMzVB1.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-l-qGMZ_m.js";import"./Relationship-DKjzkrdP.js";import"./serviceCapabilitiesUtils-CAKHLNR4.js";import"./editsZScale-CdKAY04L.js";import"./APIKeyMixin-2z2CxhId.js";import"./ArcGISService-CB8oOmIt.js";import"./BlendLayer-Q9TmnPKi.js";import"./jsonUtils-lTMEmXdL.js";import"./parser-CTvraIcx.js";import"./CustomParametersMixin-NfSN27e-.js";import"./EditBusLayer-DP5QNaY1.js";import"./FeatureEffectLayer-CaR4X2Bg.js";import"./FeatureEffect-C_BRmPW_.js";import"./FeatureReductionLayer-IbsAwH-k.js";import"./FeatureReductionSelection-CyX2kmVv.js";import"./labelingInfo-B9KvZpaH.js";import"./labelUtils-BQ78aDcx.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-BeJ9mX3b.js";import"./OrderedLayer-DN--jf84.js";import"./OrderByInfo-DKQNrewq.js";import"./PortalLayer-bO1XB4Ox.js";import"./RefreshableLayer-YgujgLRm.js";import"./ScaleRangeLayer-BxZFwKIw.js";import"./TemporalLayer-BphDWGgM.js";import"./FeatureTemplate-CO10ietR.js";import"./FeatureType-CGT1PK4f.js";import"./fieldProperties-DHA7YMWE.js";import"./versionUtils-CEqFSS6L.js";import"./styleUtils-wX8vPq1a.js";import"./popupUtils-BUO4PhcE.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-CnVprQ43.js";async function lt(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,f:"json"}),...p}),s=`${i.path}/trace`;return u(s,m).then(a=>f(a))}async function Jt(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,async:!0,f:"json"}),...p}),s=`${i.path}/trace`,{data:a}=await u(s,m);return a.statusUrl}function f(o){const{data:t}=o;return y.fromJSON(t.traceResults)}export{Jt as submitTraceJob,lt as trace};
//# sourceMappingURL=trace-eAaQYGW5.js.map
