import{du as w,ar as y,a9 as I,x as l,s as V,j as m,m as g,k as H}from"./index-Dqo4rVFT.js";import"./floatRGBA-DN-1qPNQ.js";import"./definitions-C0Jy3zs7.js";import"./UpdateTracking2D-2hQ07DmQ.js";import"./GeometryUtils-0m__OBiv.js";import"./CIMSymbolHelper-Btm8I6sB.js";import"./vec2f32-BbH2jxlN.js";import"./EffectView-Ct9Vxdl7.js";import"./Container-C5oTxL7-.js";import"./MapView-PMUr_KlW.js";import"./WGLContainer-BT5uB29f.js";import"./Texture-DM5s9Z7h.js";import"./enums-Dk3osxpS.js";import"./Program-CfTis0-R.js";import"./LabelMetric-BtsnsCWn.js";import"./StyleDefinition-BaSqD2Wd.js";import"./enums-BRzLM11V.js";import"./GridShader-CEhvKe2v.js";import"./FeatureCommandQueue-S5iCQ_dI.js";import"./PieChartMeshWriter-BIN1CHMM.js";import"./renderState-BqKKaxGi.js";import"./interfaces-DDtDqZYj.js";import"./testSVGPremultipliedAlpha-BjJZamdC.js";import{F as v}from"./GraphicsView2D-NKcuIujI.js";import"./earcut-Lltz9D9k.js";import"./vec3f32-nZdmKIgz.js";import"./UpdatingHandles-DwxXKo3O.js";import{r as T,o as n,n as f}from"./imageUtils-CH4NTGPd.js";import{j as q,y as U}from"./LayerView-d04Ljfgr.js";import{h as C}from"./HighlightGraphicContainer-7c3SCgwf.js";import{h as b,p as Q,r as S}from"./Tile-BG925xcF.js";import{e as d}from"./TileKey-BvuiRUOc.js";import{i as $}from"./RefreshableLayerView-DlePI9jL.js";import{_ as F,R as P}from"./MapServiceLayerViewHelper-B28T5AK-.js";import{r as k}from"./drapedUtils-Br63aXQ7.js";import{g as L}from"./Scheduler-CWGmb18Z.js";import"./BindType-BmZEZMMh.js";import"./Util-wHyytk6N.js";import"./ReactiveMap-Dfez83y5.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-RN0qh67n.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CnpCxTZE.js";import"./CollectionFlattener-CLmJgeo8.js";import"./TileInfo-CTNDTilf.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-CTdYtfv3.js";import"./uuid-Cl5lrJ4c.js";import"./signal-DPzZjOXm.js";import"./ColorBackground-Nzyu0fAJ.js";import"./basemapUtils-Dk28Ezgn.js";import"./TablesMixin-C4OWsqfi.js";import"./HeightModelInfo-CA7Yxqkf.js";import"./a11yUtils-CKKjReE_.js";import"./ViewingMode-dBUh39ak.js";import"./mat3-BPo7zqPd.js";import"./unitBezier-BX6NeAEr.js";import"./vec32-C-ocfarP.js";import"./imageUtils-yYI5FqXE.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-Q5uIkflD.js";import"./GoTo-BfE0bPa_.js";import"./ZoomViewModel-BDSbY6t-.js";import"./BufferObject-_6I8GtHe.js";import"./VertexArrayObject-BOQQcrsv.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./ProgramTemplate-vy0ejg8H.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-DmTMDCzt.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-DjRsfVX6.js";import"./TimeOnly-XafyDaqK.js";import"./timeSupport-CJJ8HBWh.js";import"./labelUtils-fgvL7nsO.js";import"./constants-F8oTIn7N.js";import"./QueueProcessor-BmOU92IN.js";import"./TurboLine-Df-KjI5q.js";import"./basicInterfaces-CZwQPxTp.js";import"./normalizeUtilsSync-C018keVb.js";import"./Bitmap-fJxm10hz.js";import"./TileContainer-Dcqi7g5f.js";import"./utils-BQBvadb7.js";import"./layerViewUtils-DW2BdKJl.js";import"./AGraphicContainer-DbTCi85d.js";import"./TechniqueInstance-Dqp8gCqy.js";import"./quickselect-QQC62dOK.js";import"./languageUtils-l2ZRQShg.js";import"./ImmutableArray-BPVd6ESQ.js";import"./shared-Qyg_k2bk.js";import"./number-oMS6PuFf.js";import"./scaleUtils-D4a_-WEF.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-FWgSeAnI.js";import"./popupUtils-CMqt2Ni6.js";const E=[0,0];let p=class extends $(T(q(U))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new b(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new Q({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:L.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new S({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),F(this,this.layer)){const e=this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new C(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new P({createFetchPopupFeaturesQueryGeometry:(r,h)=>k(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):y()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return I((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(E,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(s){if(!l(s)&&!this.resampling)return n(this._tileInfoView.tileInfo.size);if(h<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){const c=new d(u),_=await this.fetchTile(c,{...i,resamplingLevel:h+1});return f(this._tileInfoView,_,c,t)}}throw s}const o=new d(0,0,0,0);let a;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,o,{signal:r}),!this.resampling&&o.level!==t.level)return n(this._tileInfoView.tileInfo.size);a=await this._fetchImage(o,r)}catch(s){if(l(s))throw s;return n(this._tileInfoView.tileInfo.size)}return this.resampling?f(this._tileInfoView,a,o,t):a}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||V.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};m([g()],p.prototype,"resampling",null),m([g()],p.prototype,"tilemapCache",null),p=m([H("esri.views.2d.layers.TileLayerView2D")],p);const Ui=p;export{Ui as default};
//# sourceMappingURL=TileLayerView2D-DbjXjefp.js.map
