import{db as d,dd as m,dc as n,U as l,I as f}from"./index-BfLS464G.js";import{i as k}from"./WebMap-DEffliVq.js";import"./ColorBackground-B-aHDRbY.js";import"./CollectionFlattener-X0S8zgtM.js";import"./basemapUtils-CATGu2F4.js";import"./TablesMixin-CFytb7-C.js";import"./MultiOriginJSONSupport-BwKTB8uK.js";import"./portalItemUtils-EuqfQTt4.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-lv3vrX4Z.js";import"./jsonContext-CK1OtGbn.js";import"./project-CMwThrYg.js";import"./FeatureLayer-CDpKvV3l.js";import"./commonProperties-BYkEjETv.js";import"./FeatureLayerBase-BGV1qseJ.js";import"./HeightModelInfo-DzK0H4Qy.js";import"./featureLayerUtils-Bgc5F16E.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-D1gNlHjm.js";import"./Relationship-D4VApXlb.js";import"./serviceCapabilitiesUtils-C_-03Ql-.js";import"./editsZScale-BK19AzRt.js";import"./APIKeyMixin-CFihdbDi.js";import"./ArcGISService-BirHaw4A.js";import"./CustomParametersMixin-D4pNVDVF.js";import"./EditBusLayer-gmXab_6V.js";import"./FeatureEffectLayer-rz1La56W.js";import"./FeatureEffect-DNhvMAVm.js";import"./FeatureReductionLayer-CRQCzTpq.js";import"./FeatureReductionSelection-CwDWpKst.js";import"./labelingInfo-CULBC2Dz.js";import"./labelUtils-BlsYivSn.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-BUUpUxXC.js";import"./OrderedLayer-CTWEJHsD.js";import"./OrderByInfo-Baayvtrh.js";import"./PortalLayer-tuvCU0Ht.js";import"./RefreshableLayer-CHgQeylb.js";import"./TemporalLayer-CnKbOiyq.js";import"./FeatureTemplate-CxRsgMWf.js";import"./FeatureType-C2bGC672.js";import"./fieldProperties-D3adeTWh.js";import"./versionUtils-BzrJYu22.js";import"./styleUtils-C4RcdAhf.js";import"./popupUtils-B9Xf_bU6.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-igEAMhwY.js";async function nt(i,t,a){const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s={...r,returnEdits:!0,f:"json"},p=m({...e.query,...s}),o=n(p,{...a,method:"post"}),c=`${e.path}/validateNetworkTopology`,{data:u}=await l(c,o);return k.fromJSON(v(u))}async function lt(i,t,a){if(!t.gdbVersion)throw new f("submit-validate-network-topology-job:missing-gdb-version","version is missing");const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s=n(e.query,{query:m({...r,returnEdits:!0,async:!0,f:"json"}),...a,method:"post"}),p=`${e.path}/validateNetworkTopology`,{data:o}=await l(p,s);return o?o.statusUrl:null}function v(i){return i.serviceEdits&&(i.serviceEdits=i.serviceEdits.map(t=>(t.editedFeatures.spatialReference&&(t.editedFeatures.spatialReference={wkid:t.editedFeatures.spatialReference.wkid,wkt:t.editedFeatures.spatialReference.wkt,wkt2:t.editedFeatures.spatialReference.wkt2,latestWkid:t.editedFeatures.spatialReference.latestWkid,latestVcsWkid:t.editedFeatures.spatialReference.latestVcsWkid,vcsWkid:t.editedFeatures.spatialReference.vcsWkid}),t={layerId:t.id,editedFeatures:t.editedFeatures}))),i}export{v as handleValidateNetworkTopologyResult,lt as submitValidateNetworkTopologyJob,nt as validateNetworkTopology};
//# sourceMappingURL=validateNetworkTopology-C2is4oBn.js.map
