import{j as s,m as i,k as l,P as h,eV as n,cm as f,aC as S,db as g,dc as y,U as R,fn as w}from"./index-D2fbPmv2.js";let o=class extends h{constructor(e){super(e),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:f(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],o.prototype,"geometries",void 0),s([i({json:{read:{source:"outSR"}}})],o.prototype,"outSpatialReference",void 0),s([i()],o.prototype,"transformation",void 0),s([i()],o.prototype,"transformForward",void 0),o=s([l("esri.rest.support.ProjectParameters")],o);const j=o,$=S(j);async function J(e,t,r){t=$(t);const a=g(e),p={...a.query,f:"json",...t.toJSON()},m=t.outSpatialReference,c=f(t.geometries[0]),u=y(p,r);return R(a.path+"/project",u).then(({data:{geometries:d}})=>w(d,c,m))}export{J as n,j as p};
//# sourceMappingURL=project-CM04MxmI.js.map
