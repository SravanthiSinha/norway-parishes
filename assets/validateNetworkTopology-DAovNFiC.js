import{db as m,dd as d,dc as n,U as l,I as f}from"./index-XUmwAfbD.js";import{i as k}from"./WebMap-CeHmlPSh.js";import"./ColorBackground-Db1ESHNU.js";import"./CollectionFlattener-totJwnhh.js";import"./basemapUtils-D-YipfZ-.js";import"./utils-CXJkEfDz.js";import"./TablesMixin-DDYti3Ic.js";import"./Layer-B5mrXn3K.js";import"./MultiOriginJSONSupport-TXhd9nAR.js";import"./portalItemUtils-EEgQYIkq.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-BDtP0myK.js";import"./jsonContext-B4pQgmZ3.js";import"./project-BFBh7UwU.js";import"./FeatureLayer-BouGm6jC.js";import"./commonProperties-D13FKckC.js";import"./ElevationInfo-z6ZU5G2f.js";import"./FeatureLayerBase-Chjkji4I.js";import"./HeightModelInfo-Cf5Fyha2.js";import"./featureLayerUtils-DUVMzVB1.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-l-qGMZ_m.js";import"./Relationship-DKjzkrdP.js";import"./serviceCapabilitiesUtils-CAKHLNR4.js";import"./editsZScale-CdKAY04L.js";import"./APIKeyMixin-2z2CxhId.js";import"./ArcGISService-CB8oOmIt.js";import"./BlendLayer-Q9TmnPKi.js";import"./jsonUtils-lTMEmXdL.js";import"./parser-CTvraIcx.js";import"./CustomParametersMixin-NfSN27e-.js";import"./EditBusLayer-DP5QNaY1.js";import"./FeatureEffectLayer-CaR4X2Bg.js";import"./FeatureEffect-C_BRmPW_.js";import"./FeatureReductionLayer-IbsAwH-k.js";import"./FeatureReductionSelection-CyX2kmVv.js";import"./labelingInfo-B9KvZpaH.js";import"./labelUtils-BQ78aDcx.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-BeJ9mX3b.js";import"./OrderedLayer-DN--jf84.js";import"./OrderByInfo-DKQNrewq.js";import"./PortalLayer-bO1XB4Ox.js";import"./RefreshableLayer-YgujgLRm.js";import"./ScaleRangeLayer-BxZFwKIw.js";import"./TemporalLayer-BphDWGgM.js";import"./FeatureTemplate-CO10ietR.js";import"./FeatureType-CGT1PK4f.js";import"./fieldProperties-DHA7YMWE.js";import"./versionUtils-CEqFSS6L.js";import"./styleUtils-wX8vPq1a.js";import"./popupUtils-BUO4PhcE.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-CnVprQ43.js";async function wt(i,t,a){const r=m(i),e=t.toJSON();t.validationSet&&(e.validationSet=JSON.stringify(t.validationSet));const p={...e,returnEdits:!0,f:"json"},s=d({...r.query,...p}),o=n(s,{...a,method:"post"}),c=`${r.path}/validateNetworkTopology`,{data:u}=await l(c,o);return k.fromJSON(v(u))}async function yt(i,t,a){if(!t.gdbVersion)throw new f("submit-validate-network-topology-job:missing-gdb-version","version is missing");const r=m(i),e=t.toJSON();t.validationSet&&(e.validationSet=JSON.stringify(t.validationSet));const p=n(r.query,{query:d({...e,returnEdits:!0,async:!0,f:"json"}),...a,method:"post"}),s=`${r.path}/validateNetworkTopology`,{data:o}=await l(s,p);return o?o.statusUrl:null}function v(i){return i.serviceEdits&&(i.serviceEdits=i.serviceEdits.map(t=>(t.editedFeatures.spatialReference&&(t.editedFeatures.spatialReference={wkid:t.editedFeatures.spatialReference.wkid,wkt:t.editedFeatures.spatialReference.wkt,wkt2:t.editedFeatures.spatialReference.wkt2,latestWkid:t.editedFeatures.spatialReference.latestWkid,latestVcsWkid:t.editedFeatures.spatialReference.latestVcsWkid,vcsWkid:t.editedFeatures.spatialReference.vcsWkid}),t={layerId:t.id,editedFeatures:t.editedFeatures}))),i}export{v as handleValidateNetworkTopologyResult,yt as submitValidateNetworkTopologyJob,wt as validateNetworkTopology};
//# sourceMappingURL=validateNetworkTopology-DAovNFiC.js.map
