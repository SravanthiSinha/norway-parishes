import{db as e,dc as c,dd as n,U as u}from"./index-vxzybAz5.js";import{a as y}from"./WebMap-CvLN2Kp7.js";import"./ColorBackground-DrtHmMr_.js";import"./CollectionFlattener-CEQ-twnw.js";import"./basemapUtils-BVg27rrM.js";import"./TablesMixin-B36A5yOS.js";import"./MultiOriginJSONSupport-DAGZlN0u.js";import"./portalItemUtils-Cir6-RYG.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-cX9PQVZI.js";import"./jsonContext-D0ooh6Ua.js";import"./project-YJumZ9E_.js";import"./FeatureLayer-Bt96Mclx.js";import"./commonProperties-CfwF00T4.js";import"./FeatureLayerBase-Dsn5weG9.js";import"./HeightModelInfo-C19vOMVt.js";import"./featureLayerUtils-fM2-zC_U.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-BFR58veN.js";import"./Relationship-C2Nj2z5d.js";import"./serviceCapabilitiesUtils-D7TD5KQh.js";import"./editsZScale-CdrELI2u.js";import"./APIKeyMixin-Bu3XJRd-.js";import"./ArcGISService-DLqHU9Ys.js";import"./CustomParametersMixin-B6CSU--H.js";import"./EditBusLayer-y3WAhf7z.js";import"./FeatureEffectLayer-CwLVsrvK.js";import"./FeatureEffect-B8Zj0u5R.js";import"./FeatureReductionLayer-Czq_8MqD.js";import"./FeatureReductionSelection-DrpA42g6.js";import"./labelingInfo-C-0M5fT8.js";import"./labelUtils-DiR3_Bb8.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-BurlOfUV.js";import"./OrderedLayer-_29wPwz1.js";import"./OrderByInfo-DmLOYl6T.js";import"./PortalLayer-BIoaCdTV.js";import"./RefreshableLayer-CbHSBlkq.js";import"./TemporalLayer-CXEqSWVN.js";import"./FeatureTemplate-BOSwAzpP.js";import"./FeatureType-xxmg1vn7.js";import"./fieldProperties-Dt84ZoKT.js";import"./versionUtils-Bxdo9n7A.js";import"./styleUtils-9bVwrSIE.js";import"./popupUtils-CzptTD6Z.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-Cqn_az-y.js";async function at(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,f:"json"}),...p}),s=`${i.path}/trace`;return u(s,m).then(a=>f(a))}async function et(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,async:!0,f:"json"}),...p}),s=`${i.path}/trace`,{data:a}=await u(s,m);return a.statusUrl}function f(o){const{data:t}=o;return y.fromJSON(t.traceResults)}export{et as submitTraceJob,at as trace};
//# sourceMappingURL=trace-DR3Q-VbX.js.map
