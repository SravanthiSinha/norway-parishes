import{j as p,m as f,k as u,P as d,db as l,dd as y,dc as N,U as h}from"./index-Bs-G_wsu.js";import{d as C}from"./WebMap-DEMoRMBh.js";import"./ColorBackground-CCzJQZw-.js";import"./CollectionFlattener-CTw_eXOA.js";import"./basemapUtils-RODjC3R-.js";import"./utils-DzB8n6BG.js";import"./TablesMixin-D5Abru63.js";import"./Layer-BD5fEEcE.js";import"./MultiOriginJSONSupport-BBxe_F7T.js";import"./portalItemUtils-DwiXoV8_.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-BCZiCiBo.js";import"./jsonContext-BDIn9Amg.js";import"./project-icRd-hca.js";import"./FeatureLayer-DqQYisns.js";import"./commonProperties-D2JZeGzF.js";import"./ElevationInfo-Ogo5JfE3.js";import"./FeatureLayerBase-DxFxosgr.js";import"./HeightModelInfo-DY5GmORu.js";import"./featureLayerUtils-B9lP5GlN.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-D23a2fZQ.js";import"./Relationship-C-cZFGat.js";import"./serviceCapabilitiesUtils-GEj5uSHc.js";import"./editsZScale-8PMy8JU4.js";import"./APIKeyMixin-DWFWR-Vn.js";import"./ArcGISService-Dhi-DofJ.js";import"./BlendLayer-BeHYTX5Y.js";import"./jsonUtils-qHdUfL9L.js";import"./parser-DP7rDSW3.js";import"./CustomParametersMixin-Y8anAD7D.js";import"./EditBusLayer-BZlckobr.js";import"./FeatureEffectLayer-CFhteKe0.js";import"./FeatureEffect-27mWUEtN.js";import"./FeatureReductionLayer-C4ahZQSV.js";import"./FeatureReductionSelection-QQOJQw4A.js";import"./labelingInfo-Qff1pGsE.js";import"./labelUtils-BPgYl1Yw.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-okMj1Nle.js";import"./OrderedLayer-BJsCVehV.js";import"./OrderByInfo-Dttd1GVs.js";import"./PortalLayer-DHH3dWZi.js";import"./RefreshableLayer-BAKri3Ps.js";import"./ScaleRangeLayer-DoKtR3vt.js";import"./TemporalLayer-Byau-JSW.js";import"./FeatureTemplate-BJHAfJZ2.js";import"./FeatureType-rnXSbOXM.js";import"./fieldProperties-CwoNl49C.js";import"./versionUtils-DuQ7RKEy.js";import"./styleUtils-CplkOwlh.js";import"./popupUtils-Cu6PoQ9J.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-DrdCd9jQ.js";let o=class extends d{constructor(i){super(i),this.namedTraceConfigurations=[]}};p([f({type:[C],json:{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}}})],o.prototype,"namedTraceConfigurations",void 0),o=p([u("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")],o);const $=o;async function Jt(i,t,s){const m=l(i),r=t.toJSON();t.globalIds&&t.globalIds.length>0&&(r.globalIds=JSON.stringify(t.globalIds)),t.creators&&t.creators.length>0&&(r.creators=JSON.stringify(t.creators)),t.tags&&t.tags.length>0&&(r.tags=JSON.stringify(t.tags)),t.names&&t.names.length>0&&(r.names=JSON.stringify(t.names));const a={...r,f:"json"},e=y({...m.query,...a}),n=N(e,{...s,method:"post"}),g=`${m.path}/traceConfigurations/query`,{data:c}=await h(g,n);return $.fromJSON(c)}export{Jt as queryNamedTraceConfigurations};
