import{j as s,m as n,k as l,ao as m,I as c,gg as _,ar as g,dx as d}from"./index-CJT1kG3U.js";import{n as f,r as v}from"./FeatureLayerView2D-B-MOU5M-.js";import{d as S}from"./FeatureEffect-Aug1VK_I.js";import"./EffectView-CRjhcBV6.js";import"./featureConversionUtils-Div36Cal.js";import"./timeSupport-7y82-Md6.js";import"./ColorBackground-DccT2d7M.js";import"./CollectionFlattener-BsnC7bWF.js";import"./basemapUtils-629Q36Sj.js";import"./TablesMixin-C-3U0nTN.js";import"./LayerView-Bnvey-au.js";import"./utils-BQBvadb7.js";import"./Container-BtHn5WY3.js";import"./MapView-BQ6Mt_4y.js";import"./TileInfo-D2mG8glk.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-CJ-uN1XA.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-Ri2iA_se.js";import"./signal-BwvSX_89.js";import"./HeightModelInfo-BsdLH3Iz.js";import"./ReactiveMap-D0q2XblF.js";import"./a11yUtils-C4X8x9bL.js";import"./ViewingMode-dBUh39ak.js";import"./mat2df32-orApM5a3.js";import"./mat3-C5rmyjBz.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CcTJk8um.js";import"./Tile-BjB8ZBu2.js";import"./TileKey-DlQpmfZ8.js";import"./QueueProcessor-uFbLp18G.js";import"./quickselect-QQC62dOK.js";import"./vec32-BEXyJ64g.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-DoHlZBFN.js";import"./imageUtils-CdiIafnh.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-C2_zXrKD.js";import"./GoTo-GibMKxSC.js";import"./ZoomViewModel-BjXxVwA6.js";import"./layerViewUtils-CguN3FHe.js";import"./TechniqueInstance-DMBnW7IS.js";import"./UpdateTracking2D-C2ZEk-pV.js";import"./BindType-BmZEZMMh.js";import"./Util-DGCd4FcP.js";import"./Program-DkHxVm6t.js";import"./BufferObject-Dn3fCcHO.js";import"./LabelMetric-BNr-tKu5.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-C3L2xTwQ.js";import"./WGLContainer-DfRlmO_-.js";import"./VertexArrayObject-C0hHeYSh.js";import"./ProgramTemplate-DoXRjSEE.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BuzOBm48.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-qoM1bzDH.js";import"./CIMSymbolHelper-Ddono5UG.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BdRX8GAv.js";import"./GeometryUtils-B2dgUHbU.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./OrderByInfo-BfIwxxWp.js";import"./labelingInfo-Bthc2OpT.js";import"./labelUtils-DWCTGugX.js";import"./SDFHelper-CCVFD0fw.js";import"./floatRGBA-Dm-wkrGu.js";import"./HighlightCounter-Czi-fdpx.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-BtmW1b8f.js";import"./RefreshableLayerView-BBshOAj0.js";const C=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return s([n()],t.prototype,"_isUserPaused",void 0),s([n({readOnly:!0})],t.prototype,"connectionStatus",null),s([n({type:S})],t.prototype,"filter",void 0),t=s([l("esri.views.layers.StreamLayerView")],t),t};let o=class extends C(v){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([m(()=>this.layer.customParameters,async e=>{(await this.getWorker()).streamMessenger.updateCustomParameters(e)}),this.layer.on("send-message-to-socket",async e=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(e)}),this.layer.on("send-message-to-client",async e=>{(await this.getWorker()).streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&e.type==="clear"&&this.incrementSourceRefreshVersion()}),m(()=>this.layer.purgeOptions,()=>this._update()),m(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new c("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return _(e.map(i=>this.on(i,t)));const r=["data-received","message-received"].includes(e);r&&this.getWorker().then(i=>i.streamMessenger.enableEvent(e,!0));const p=super.on(e,t),a=this;return g(()=>{p.remove(),r&&(a._workerProxy.closed||a.hasEventListener(e)||a.getWorker().then(i=>i.streamMessenger.enableEvent(e,!1)))})}async queryLatestObservations(e,t){var p,a,i;if(!((p=this.layer.timeInfo)!=null&&p.endField||(a=this.layer.timeInfo)!=null&&a.startField||(i=this.layer.timeInfo)!=null&&i.trackIdField))throw new c("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return f(r.features.executeQueryForLatestObservations(this._cleanUpQuery(e),t).then(y=>{const h=d.fromJSON(y);return h.features.forEach(u=>{u.layer=this.layer,u.sourceLayer=this.layer}),h}),new d({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(e=>e.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(e=>e.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(e=>e.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),t=this;return{...e,get container(){return t.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};s([n()],o.prototype,"pipelineConnectionStatus",void 0),s([n()],o.prototype,"pipelineErrorString",void 0),s([n({readOnly:!0})],o.prototype,"connectionError",null),s([n({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=s([l("esri.views.2d.layers.StreamLayerView2D")],o);const Ge=o;export{Ge as default};
//# sourceMappingURL=StreamLayerView2D-BynAECjw.js.map
