import{db as e,dc as c,dd as n,U as u}from"./index-DV3MVxlX.js";import{a as y}from"./WebMap-B3gulTbr.js";import"./ColorBackground-hJAcpOUs.js";import"./CollectionFlattener-CoeRIQwo.js";import"./basemapUtils-m0D_r2rd.js";import"./utils-Dg-cXPMz.js";import"./TablesMixin-D_AMq21Y.js";import"./Layer-elcwjLgD.js";import"./MultiOriginJSONSupport-C4KyGAFu.js";import"./portalItemUtils-7w6IECp6.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-DAf7MUka.js";import"./jsonContext-B5jW7iSm.js";import"./project-BISP0Z4b.js";import"./FeatureLayer-BzUWsyR_.js";import"./commonProperties-NAvuaIV2.js";import"./ElevationInfo-DJbxGeZd.js";import"./FeatureLayerBase-BRHQoixc.js";import"./HeightModelInfo-CXYg7Mzi.js";import"./featureLayerUtils-CsAUFCMr.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-m7v7Uu1R.js";import"./Relationship-BHSgY7i_.js";import"./serviceCapabilitiesUtils-B5cRynhK.js";import"./editsZScale-B5NpbC08.js";import"./APIKeyMixin-ugeoU5LB.js";import"./ArcGISService-5eRihsGl.js";import"./BlendLayer-qfTnVaVj.js";import"./jsonUtils-CsExkVht.js";import"./parser-DD0wpiKf.js";import"./CustomParametersMixin-DWpR-0ri.js";import"./EditBusLayer-CYbHCcpA.js";import"./FeatureEffectLayer-CfYGfA2a.js";import"./FeatureEffect-COMKlNt9.js";import"./FeatureReductionLayer-CT2-5uB7.js";import"./FeatureReductionSelection-CDXiWoqP.js";import"./labelingInfo-Elk4zvoD.js";import"./labelUtils-Da1jiz37.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-DYBm30DI.js";import"./OrderedLayer-DxqP2S1C.js";import"./OrderByInfo-Fe762TFU.js";import"./PortalLayer-Dbs8pJc3.js";import"./RefreshableLayer-Db1o29If.js";import"./ScaleRangeLayer-PXI1PGhp.js";import"./TemporalLayer-BTHSHBnH.js";import"./FeatureTemplate-DyY6eJhk.js";import"./FeatureType-D-FRhVkz.js";import"./fieldProperties-CIn6ZK4E.js";import"./versionUtils-DbwjIJlN.js";import"./styleUtils-BRDvsW1b.js";import"./popupUtils-GvIf7ipJ.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-jfwIkk5d.js";async function lt(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,f:"json"}),...p}),s=`${i.path}/trace`;return u(s,m).then(a=>f(a))}async function Jt(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,async:!0,f:"json"}),...p}),s=`${i.path}/trace`,{data:a}=await u(s,m);return a.statusUrl}function f(o){const{data:t}=o;return y.fromJSON(t.traceResults)}export{Jt as submitTraceJob,lt as trace};
//# sourceMappingURL=trace-Db1R9Cf5.js.map
