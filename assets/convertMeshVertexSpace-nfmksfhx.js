import{w as s,I as m,b5 as p}from"./index-CyZqSx7I.js";import{p as n}from"./MeshVertexAttributes-BE7l72gw.js";import{B as a}from"./vertexSpaceConversion-TPS6VC0i.js";import"./mat3-Doicj2BK.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./vec32-Tb7lCH7n.js";import"./spatialReferenceEllipsoidUtils-yxSgO8OC.js";import"./computeTranslationToOriginAndRotation-Drz-D_Tf.js";import"./projectPointToVector-DZZPDa8f.js";import"./meshVertexSpaceUtils-CXVwiZyr.js";import"./MeshLocalVertexSpace-CqPfHsCT.js";import"./vec3-DK1Tdpfh.js";import"./BufferView-HBs8xSku.js";import"./vec4-CyqfilzJ.js";async function S(t,o,r){await Promise.resolve(),s(r);const e=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!e)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...e,uv:p(t.vertexAttributes.uv),color:p(t.vertexAttributes.color)}),o);return i.transform=null,i}export{S as convertMeshVertexSpace};
//# sourceMappingURL=convertMeshVertexSpace-nfmksfhx.js.map
