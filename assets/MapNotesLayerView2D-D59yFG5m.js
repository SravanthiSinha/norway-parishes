import{d4 as u,ae as f,c1 as w,av as m,as as a,dv as h,au as y,j as _,k as V}from"./index-BB6xpuj5.js";import{j as v,y as C}from"./LayerView-C9uOes3C.js";import{t as c}from"./GraphicContainer-CejLQHw-.js";import{F as g}from"./GraphicsView2D-FXKEKrJx.js";import"./utils-BQBvadb7.js";import"./Container-CzB7Zj09.js";import"./MapView-BB5zyy98.js";import"./CollectionFlattener-vw9PCdEV.js";import"./TileInfo-DckZPgmV.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-zVWkHYEv.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-DP1x1Bsi.js";import"./signal-JD86_R7M.js";import"./ColorBackground-5boBVQCV.js";import"./basemapUtils-DT7CgBiu.js";import"./utils-Dmn_mtNQ.js";import"./TablesMixin-rUkw-8tc.js";import"./Layer-5zl9d9z3.js";import"./GraphicsCollection-BlSm0Gtj.js";import"./HeightModelInfo-Cn8WVYm1.js";import"./ReactiveMap-C5xyLUPa.js";import"./a11yUtils-XrMtlS1N.js";import"./ViewingMode-dBUh39ak.js";import"./mat2df32-orApM5a3.js";import"./mat3-DJqSU6w-.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CoC6AtxP.js";import"./Tile-CSO7o2Lx.js";import"./TileKey-bsr5k5kR.js";import"./QueueProcessor-DuXSk4nk.js";import"./quickselect-QQC62dOK.js";import"./vec32-Dn1yeTzb.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-BzN5lHkh.js";import"./imageUtils-DlrOtbVu.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-D95E-zHd.js";import"./GoTo-CVPsm2b2.js";import"./ZoomViewModel-CECqLXXU.js";import"./EffectView-ByR8_5fn.js";import"./parser-Bf0eM-Za.js";import"./layerViewUtils-CcnERjia.js";import"./AGraphicContainer-W19VHD7K.js";import"./TechniqueInstance-C_8TZDcA.js";import"./UpdateTracking2D-eAHQ9B1z.js";import"./BindType-BmZEZMMh.js";import"./Util-CB3Gd6Qy.js";import"./Program-0OZM0gHS.js";import"./BufferObject-C7inN83X.js";import"./LabelMetric-C8LidgNF.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-BXFytAM8.js";import"./WGLContainer-DtgvS25h.js";import"./VertexArrayObject-C34nLg7v.js";import"./ProgramTemplate-BeeJCxBw.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-Bx5E0gVl.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-L6p5wBVT.js";import"./FeatureCommandQueue-9w2UUk_3.js";import"./CIMSymbolHelper-41U55g81.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-3KqT7etV.js";import"./GeometryUtils-CoU-W_YD.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./AttributeStore-KxhCcAOR.js";import"./TimeOnly-DIyoNsbt.js";import"./timeSupport-DrDUNSUJ.js";import"./labelUtils-CfVEjBe_.js";import"./normalizeUtilsSync-CvBZNtZ1.js";const d="sublayers",l="layerView",H=new Set(["default"]);let n=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,t){return Array.from(this.graphicsViews(),e=>{const s=e.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const o=this._graphicsViewsFeatureCollectionMap.get(e);for(const r of s)!r.popupTemplate&&o.popupTemplate&&(r.popupTemplate=o.popupTemplate),r.sourceLayer=r.layer=this.layer}return s}).flat().map(e=>({type:"graphic",graphic:e,layer:this.layer,mapPoint:i}))}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):f.isCollection(i)&&(t=i.map(s=>s&&s.uid).toArray());const e=t==null?void 0:t.filter(w);return e!=null&&e.length?(this._addHighlight(e),m(()=>this._removeHighlight(e))):m()}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),e=this.layer.featureCollections;if(e!=null&&e.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const s of e){const o=new c(this.view.featuresTilingScheme),r=new g({view:i,graphics:s.source,renderer:s.renderer,requestUpdateCallback:t,container:o});this._graphicsViewsFeatureCollectionMap.set(r,s),this.container.addChild(r.container),this.addHandles([a(()=>s.visible,p=>r.container.visible=p,h),a(()=>r.updating,()=>this.notifyChange("updating"),h)],l)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(l);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],t=this.view,e=()=>this.requestUpdate();for(const s of this.layer.sublayers){const o=new c(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const r=new g({view:t,graphics:s.graphics,requestUpdateCallback:e,container:o});this.addHandles([s.on("graphic-update",r.graphicUpdateHandler),a(()=>s.visible,p=>r.container.visible=p,h),a(()=>r.updating,()=>this.notifyChange("updating"),h)],l),this.container.addChild(r.container),i.push(r)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;e===0?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),t=this._getHighlightBits(H);for(const e of this.graphicsViews())e.setHighlight(i.map(s=>({objectId:s,highlightFlags:t})))}};n=_([V("esri.views.2d.layers.MapNotesLayerView2D")],n);const Oi=n;export{Oi as default};
