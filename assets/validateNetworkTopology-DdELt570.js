import{db as d,dd as m,dc as n,U as l,I as f}from"./index-oLM2nnvm.js";import{i as k}from"./WebMap-CSkEeAHw.js";import"./ColorBackground-DnLp5fuI.js";import"./CollectionFlattener-B8fqvrQQ.js";import"./basemapUtils-Cx0e7D1U.js";import"./TablesMixin-C_yCmV8H.js";import"./MultiOriginJSONSupport-B5O_NPAI.js";import"./portalItemUtils-o0HMA_HX.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-BSn-QZmJ.js";import"./jsonContext-J92Yj9vD.js";import"./project-5-7xc2Zl.js";import"./FeatureLayer-C9mYBTFk.js";import"./commonProperties-BtQS_lnB.js";import"./FeatureLayerBase-BFwwgquk.js";import"./HeightModelInfo-Do10YdaJ.js";import"./featureLayerUtils-BjuaFVy1.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-DdL3RdGd.js";import"./Relationship-D6ltT5TX.js";import"./serviceCapabilitiesUtils-C_K_b7z_.js";import"./editsZScale-CS9xwnZE.js";import"./APIKeyMixin-CmWCsb42.js";import"./ArcGISService-Bf4BaP2A.js";import"./CustomParametersMixin-DniFnX77.js";import"./EditBusLayer-CSuQ8iPk.js";import"./FeatureEffectLayer-TNzJcDS0.js";import"./FeatureEffect-5U-xsKY6.js";import"./FeatureReductionLayer-CFVZ4Tgu.js";import"./FeatureReductionSelection-uE9Vvv5Y.js";import"./labelingInfo-Z5Xviby6.js";import"./labelUtils-CUcaCcjV.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-BgXIKL7k.js";import"./OrderedLayer-UGjIlwzM.js";import"./OrderByInfo-CSXlwigP.js";import"./PortalLayer-Cc5Wpw6A.js";import"./RefreshableLayer-C1V-r-C6.js";import"./TemporalLayer-7usoT4ud.js";import"./FeatureTemplate-BDetaB7G.js";import"./FeatureType-D7Fy3Yxr.js";import"./fieldProperties-aPU0vr3T.js";import"./versionUtils-DFPk8unr.js";import"./styleUtils-Bnn-Jqi0.js";import"./popupUtils-D8yjXEad.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-d5WQpI4D.js";async function nt(i,t,a){const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s={...r,returnEdits:!0,f:"json"},p=m({...e.query,...s}),o=n(p,{...a,method:"post"}),c=`${e.path}/validateNetworkTopology`,{data:u}=await l(c,o);return k.fromJSON(v(u))}async function lt(i,t,a){if(!t.gdbVersion)throw new f("submit-validate-network-topology-job:missing-gdb-version","version is missing");const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s=n(e.query,{query:m({...r,returnEdits:!0,async:!0,f:"json"}),...a,method:"post"}),p=`${e.path}/validateNetworkTopology`,{data:o}=await l(p,s);return o?o.statusUrl:null}function v(i){return i.serviceEdits&&(i.serviceEdits=i.serviceEdits.map(t=>(t.editedFeatures.spatialReference&&(t.editedFeatures.spatialReference={wkid:t.editedFeatures.spatialReference.wkid,wkt:t.editedFeatures.spatialReference.wkt,wkt2:t.editedFeatures.spatialReference.wkt2,latestWkid:t.editedFeatures.spatialReference.latestWkid,latestVcsWkid:t.editedFeatures.spatialReference.latestVcsWkid,vcsWkid:t.editedFeatures.spatialReference.vcsWkid}),t={layerId:t.id,editedFeatures:t.editedFeatures}))),i}export{v as handleValidateNetworkTopologyResult,lt as submitValidateNetworkTopologyJob,nt as validateNetworkTopology};
//# sourceMappingURL=validateNetworkTopology-DdELt570.js.map
