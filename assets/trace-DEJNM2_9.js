import{dc as e,dd as c,de as n,U as u}from"./index-5zHX_dwk.js";import{a as y}from"./WebMap-Ch_F8kYS.js";import"./ColorBackground-CU0b6UMv.js";import"./CollectionFlattener-vRDeO2uo.js";import"./basemapUtils-DQX65VyX.js";import"./TablesMixin-W2GD88Gv.js";import"./MultiOriginJSONSupport-RBIYyr5w.js";import"./portalItemUtils-BRogluSC.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-BTzQpNCe.js";import"./jsonContext-BO3adIK8.js";import"./project-Bt62Nk0Y.js";import"./FeatureLayer-Ds7XLAje.js";import"./commonProperties-6NkVIVhw.js";import"./FeatureLayerBase-Co5fADdm.js";import"./HeightModelInfo-gBdUFXlb.js";import"./featureLayerUtils-CyGTKntI.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-CrJ36PLO.js";import"./Relationship-x8w_H1S5.js";import"./serviceCapabilitiesUtils-eujp3Yem.js";import"./editsZScale-Bw_xVlOg.js";import"./APIKeyMixin-CysfrS5h.js";import"./ArcGISService-DBjqJuS2.js";import"./CustomParametersMixin-B0lyNp4y.js";import"./EditBusLayer-DAwxOIL-.js";import"./FeatureEffectLayer-BMKznDGN.js";import"./FeatureEffect-DiLEuekT.js";import"./FeatureReductionLayer-CQ8upJpO.js";import"./FeatureReductionSelection-CSC7OKga.js";import"./labelingInfo-DZyrwEmI.js";import"./labelUtils-BWSlYVO_.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-dFN5wdq5.js";import"./OrderedLayer-BuIZMkxD.js";import"./OrderByInfo-DQY8Vn_Y.js";import"./PortalLayer-ByrYH_Yx.js";import"./RefreshableLayer-BGHP0OgI.js";import"./TemporalLayer-BZnAAFYD.js";import"./FeatureTemplate-B-kmllX0.js";import"./FeatureType-DxWc_SAB.js";import"./fieldProperties-Dc1n6JUf.js";import"./versionUtils-4JgcxOji.js";import"./styleUtils-BQ6d6geZ.js";import"./popupUtils-BhyHfMtS.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-DTDtQQQv.js";async function at(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,f:"json"}),...p}),s=`${i.path}/trace`;return u(s,m).then(a=>f(a))}async function et(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,async:!0,f:"json"}),...p}),s=`${i.path}/trace`,{data:a}=await u(s,m);return a.statusUrl}function f(o){const{data:t}=o;return y.fromJSON(t.traceResults)}export{et as submitTraceJob,at as trace};
//# sourceMappingURL=trace-DEJNM2_9.js.map
