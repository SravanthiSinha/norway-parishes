import{j as r,m as n,k as f,P as u,dc as y,de as h,dd as l,U as x}from"./index-j6yFHuRy.js";import{d as $}from"./Association-Cr42f8b0.js";import"./NetworkElement-fS5GO-IG.js";let i=class extends u{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};r([n({type:Boolean,json:{write:!0}})],i.prototype,"maxGeometryCountExceeded",void 0),r([n({type:[$],json:{write:!0}})],i.prototype,"associations",void 0),i=r([f("esri.rest.networks.support.AssociationGeometriesResult")],i);const G=i;async function S(o,t,e){const s=y(o),a={...t.toJSON(),f:"json"},c=h({...s.query,...a});e?e.method="post":e={method:"post"};const p=l(c,e),m=`${s.path}/synthesizeAssociationGeometries`;return x(m,p).then(d=>j(d,t.outSpatialReference))}function j(o,t){const{data:e}=o;if(t)for(const s of e.associations)s.geometry.spatialReference||(s.geometry.spatialReference=t.clone());return G.fromJSON(e)}export{S as synthesizeAssociationGeometries};
//# sourceMappingURL=synthesizeAssociationGeometries-GfO4NWRF.js.map
