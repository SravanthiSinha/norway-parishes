import{j as s,m as n,k as d,ao as m,I as c,gh as _,aq as g,dy as l}from"./index-BMHxxDIj.js";import{n as f,r as v}from"./FeatureLayerView2D-ONGpTNQu.js";import{d as S}from"./FeatureEffect-BSgEaayU.js";import"./EffectView-D_u3ymh-.js";import"./featureConversionUtils-DbHlaAd7.js";import"./timeSupport-EHAoYXWF.js";import"./ColorBackground-CYXW4FqY.js";import"./CollectionFlattener-BquB5e3B.js";import"./basemapUtils-BzEOQY0O.js";import"./TablesMixin-Bbku17Br.js";import"./LayerView-fovpzdrd.js";import"./utils-BQBvadb7.js";import"./Container-D4H0CPYe.js";import"./MapView-CwV6ENjH.js";import"./TileInfo-JIRNNItE.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-BGTHxzk1.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-BHsDKmJM.js";import"./signal-BTO-rHp7.js";import"./HeightModelInfo-G-qXx9lo.js";import"./ReactiveMap-C79B0m_A.js";import"./a11yUtils-BCSCjCFK.js";import"./ViewingMode-dBUh39ak.js";import"./mat2df32-orApM5a3.js";import"./mat3-DeZjtwo_.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-BcpNFlnv.js";import"./Tile-OFht_IXg.js";import"./TileKey-B_tcNWFe.js";import"./QueueProcessor-BkmL197e.js";import"./quickselect-QQC62dOK.js";import"./vec32-DdwaZZBw.js";import"./definitions-DyYHcW4a.js";import"./enums-Dk3osxpS.js";import"./Texture-D0M4lsR9.js";import"./imageUtils-CTeA8VtR.js";import"./capabilities-DWNhET5Y.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-IeUjKp3y.js";import"./accessibleHandler-Bu9MU6q_.js";import"./GoTo-CMnTvl_P.js";import"./ZoomViewModel-B5xXHX2M.js";import"./layerViewUtils-C_siCBqh.js";import"./TechniqueInstance-CAY2rhjc.js";import"./UpdateTracking2D-pQf_z9NE.js";import"./BindType-BmZEZMMh.js";import"./Util-CShJO8-o.js";import"./Program-vLNV_8XQ.js";import"./BufferObject-Ced8cFH8.js";import"./LabelMetric-BXh_414M.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-CNIcdIbR.js";import"./WGLContainer-B_jhkoyJ.js";import"./VertexArrayObject-DpkqdYCV.js";import"./ProgramTemplate-EY0VPpSv.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-CM0c77Ui.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-Jo4Ywmen.js";import"./CIMSymbolHelper-DfQmyJBe.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-Dxt1MNMp.js";import"./GeometryUtils-DtblQIgQ.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./OrderByInfo-DnPR3Ea7.js";import"./labelingInfo-JcIWibnx.js";import"./labelUtils-CXf2-pLK.js";import"./SDFHelper-Dv1pTIDS.js";import"./floatRGBA-bnl5Jzzi.js";import"./HighlightCounter-Czi-fdpx.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-BHl7j56H.js";import"./RefreshableLayerView-CUV_0-eo.js";const C=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return s([n()],t.prototype,"_isUserPaused",void 0),s([n({readOnly:!0})],t.prototype,"connectionStatus",null),s([n({type:S})],t.prototype,"filter",void 0),t=s([d("esri.views.layers.StreamLayerView")],t),t};let o=class extends C(v){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([m(()=>this.layer.customParameters,async e=>{(await this.getWorker()).streamMessenger.updateCustomParameters(e)}),this.layer.on("send-message-to-socket",async e=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(e)}),this.layer.on("send-message-to-client",async e=>{(await this.getWorker()).streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&e.type==="clear"&&this.incrementSourceRefreshVersion()}),m(()=>this.layer.purgeOptions,()=>this._update()),m(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new c("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return _(e.map(i=>this.on(i,t)));const r=["data-received","message-received"].includes(e);r&&this.getWorker().then(i=>i.streamMessenger.enableEvent(e,!0));const p=super.on(e,t),a=this;return g(()=>{p.remove(),r&&(a._workerProxy.closed||a.hasEventListener(e)||a.getWorker().then(i=>i.streamMessenger.enableEvent(e,!1)))})}async queryLatestObservations(e,t){var p,a,i;if(!((p=this.layer.timeInfo)!=null&&p.endField||(a=this.layer.timeInfo)!=null&&a.startField||(i=this.layer.timeInfo)!=null&&i.trackIdField))throw new c("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return f(r.features.executeQueryForLatestObservations(this._cleanUpQuery(e),t).then(y=>{const u=l.fromJSON(y);return u.features.forEach(h=>{h.layer=this.layer,h.sourceLayer=this.layer}),u}),new l({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(e=>e.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(e=>e.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(e=>e.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),t=this;return{...e,get container(){return t.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};s([n()],o.prototype,"pipelineConnectionStatus",void 0),s([n()],o.prototype,"pipelineErrorString",void 0),s([n({readOnly:!0})],o.prototype,"connectionError",null),s([n({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=s([d("esri.views.2d.layers.StreamLayerView2D")],o);const Ge=o;export{Ge as default};
//# sourceMappingURL=StreamLayerView2D-Dge7PgmE.js.map
