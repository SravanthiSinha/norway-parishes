import{db as m,dd as d,dc as n,U as l,I as f}from"./index-DhfeYpQB.js";import{i as k}from"./WebMap-CnfvVYiP.js";import"./ColorBackground-DDZX8Nvy.js";import"./CollectionFlattener-CNrooAWP.js";import"./basemapUtils-DKobckXJ.js";import"./utils-BZRJVqKV.js";import"./TablesMixin-DdCxEWRX.js";import"./Layer-BS17sfSP.js";import"./MultiOriginJSONSupport-BQIO3hW2.js";import"./portalItemUtils-Cdx2zb1g.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-BEg7w78n.js";import"./jsonContext-DzSR_Clx.js";import"./project-0x0l9VrE.js";import"./FeatureLayer-y6e7d2HG.js";import"./commonProperties-GP1ewpRE.js";import"./ElevationInfo-foQPpRIG.js";import"./FeatureLayerBase-B_i3o7T1.js";import"./HeightModelInfo-CUpZh5m7.js";import"./featureLayerUtils-C3i71cPz.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-HNNgWdgu.js";import"./Relationship-CHPHBG4s.js";import"./serviceCapabilitiesUtils-CzZRrVPI.js";import"./editsZScale-CjhMvka0.js";import"./APIKeyMixin-ByxCUWVM.js";import"./ArcGISService-xFcXI3er.js";import"./BlendLayer-8ILuHHxa.js";import"./jsonUtils-BIE9HkYy.js";import"./parser-7K1TO6Ko.js";import"./CustomParametersMixin-Wc4OSDrJ.js";import"./EditBusLayer-DBnPV-uq.js";import"./FeatureEffectLayer-D0F7isz_.js";import"./FeatureEffect-D0ZryKUJ.js";import"./FeatureReductionLayer-DhZr4rWc.js";import"./FeatureReductionSelection-CTGu2WAV.js";import"./labelingInfo-CgrpOWXn.js";import"./labelUtils-D9j8SqUC.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-DsG_35oZ.js";import"./OrderedLayer-BoozeEfx.js";import"./OrderByInfo-D9hDvB39.js";import"./PortalLayer-BUIfIK69.js";import"./RefreshableLayer-CMG66MdJ.js";import"./ScaleRangeLayer-Ca0oKn-n.js";import"./TemporalLayer-Bu_HEh40.js";import"./FeatureTemplate-DdxRTMtJ.js";import"./FeatureType-CXLgTMgL.js";import"./fieldProperties-Dx3D142y.js";import"./versionUtils-YzxcoIFS.js";import"./styleUtils-BAWdi8bA.js";import"./popupUtils-KMlXJ9rA.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-JHWPnq7O.js";async function wt(i,t,a){const r=m(i),e=t.toJSON();t.validationSet&&(e.validationSet=JSON.stringify(t.validationSet));const p={...e,returnEdits:!0,f:"json"},s=d({...r.query,...p}),o=n(s,{...a,method:"post"}),c=`${r.path}/validateNetworkTopology`,{data:u}=await l(c,o);return k.fromJSON(v(u))}async function yt(i,t,a){if(!t.gdbVersion)throw new f("submit-validate-network-topology-job:missing-gdb-version","version is missing");const r=m(i),e=t.toJSON();t.validationSet&&(e.validationSet=JSON.stringify(t.validationSet));const p=n(r.query,{query:d({...e,returnEdits:!0,async:!0,f:"json"}),...a,method:"post"}),s=`${r.path}/validateNetworkTopology`,{data:o}=await l(s,p);return o?o.statusUrl:null}function v(i){return i.serviceEdits&&(i.serviceEdits=i.serviceEdits.map(t=>(t.editedFeatures.spatialReference&&(t.editedFeatures.spatialReference={wkid:t.editedFeatures.spatialReference.wkid,wkt:t.editedFeatures.spatialReference.wkt,wkt2:t.editedFeatures.spatialReference.wkt2,latestWkid:t.editedFeatures.spatialReference.latestWkid,latestVcsWkid:t.editedFeatures.spatialReference.latestVcsWkid,vcsWkid:t.editedFeatures.spatialReference.vcsWkid}),t={layerId:t.id,editedFeatures:t.editedFeatures}))),i}export{v as handleValidateNetworkTopologyResult,yt as submitValidateNetworkTopologyJob,wt as validateNetworkTopology};
//# sourceMappingURL=validateNetworkTopology-WPt0scO3.js.map
