import{db as e,dc as c,dd as n,U as u}from"./index-DhfeYpQB.js";import{a as y}from"./WebMap-CnfvVYiP.js";import"./ColorBackground-DDZX8Nvy.js";import"./CollectionFlattener-CNrooAWP.js";import"./basemapUtils-DKobckXJ.js";import"./utils-BZRJVqKV.js";import"./TablesMixin-DdCxEWRX.js";import"./Layer-BS17sfSP.js";import"./MultiOriginJSONSupport-BQIO3hW2.js";import"./portalItemUtils-Cdx2zb1g.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-BEg7w78n.js";import"./jsonContext-DzSR_Clx.js";import"./project-0x0l9VrE.js";import"./FeatureLayer-y6e7d2HG.js";import"./commonProperties-GP1ewpRE.js";import"./ElevationInfo-foQPpRIG.js";import"./FeatureLayerBase-B_i3o7T1.js";import"./HeightModelInfo-CUpZh5m7.js";import"./featureLayerUtils-C3i71cPz.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-HNNgWdgu.js";import"./Relationship-CHPHBG4s.js";import"./serviceCapabilitiesUtils-CzZRrVPI.js";import"./editsZScale-CjhMvka0.js";import"./APIKeyMixin-ByxCUWVM.js";import"./ArcGISService-xFcXI3er.js";import"./BlendLayer-8ILuHHxa.js";import"./jsonUtils-BIE9HkYy.js";import"./parser-7K1TO6Ko.js";import"./CustomParametersMixin-Wc4OSDrJ.js";import"./EditBusLayer-DBnPV-uq.js";import"./FeatureEffectLayer-D0F7isz_.js";import"./FeatureEffect-D0ZryKUJ.js";import"./FeatureReductionLayer-DhZr4rWc.js";import"./FeatureReductionSelection-CTGu2WAV.js";import"./labelingInfo-CgrpOWXn.js";import"./labelUtils-D9j8SqUC.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-DsG_35oZ.js";import"./OrderedLayer-BoozeEfx.js";import"./OrderByInfo-D9hDvB39.js";import"./PortalLayer-BUIfIK69.js";import"./RefreshableLayer-CMG66MdJ.js";import"./ScaleRangeLayer-Ca0oKn-n.js";import"./TemporalLayer-Bu_HEh40.js";import"./FeatureTemplate-DdxRTMtJ.js";import"./FeatureType-CXLgTMgL.js";import"./fieldProperties-Dx3D142y.js";import"./versionUtils-YzxcoIFS.js";import"./styleUtils-BAWdi8bA.js";import"./popupUtils-KMlXJ9rA.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-JHWPnq7O.js";async function lt(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,f:"json"}),...p}),s=`${i.path}/trace`;return u(s,m).then(a=>f(a))}async function Jt(o,t,p){const i=e(o),r=t.toJSON();r.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(r.resultTypes=JSON.stringify(t.resultTypes));const m=c(i.query,{query:n({...r,async:!0,f:"json"}),...p}),s=`${i.path}/trace`,{data:a}=await u(s,m);return a.statusUrl}function f(o){const{data:t}=o;return y.fromJSON(t.traceResults)}export{Jt as submitTraceJob,lt as trace};
//# sourceMappingURL=trace-lEOaxUTW.js.map
