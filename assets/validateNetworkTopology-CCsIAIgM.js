import{I as f,dc as d,dd as m,de as n,U as l}from"./index-DbNmBX4d.js";import{i as k}from"./WebMap-Y1eww3at.js";import"./ColorBackground-DJ9LUBkO.js";import"./CollectionFlattener-f8QjlotR.js";import"./basemapUtils-D2ovKVE_.js";import"./TablesMixin-DM0BtXa2.js";import"./MultiOriginJSONSupport-B-yfrvsf.js";import"./portalItemUtils-BqSNPU_4.js";import"./interfaces-CL2NbQte.js";import"./TimeInfo-BWNqizDz.js";import"./jsonContext-C6HlqKdQ.js";import"./project-dxPanrdl.js";import"./FeatureLayer-DS_8gZka.js";import"./commonProperties-CGuThAML.js";import"./FeatureLayerBase-_2ky0iJK.js";import"./HeightModelInfo-C0ub-TTd.js";import"./featureLayerUtils-Bi22yTwR.js";import"./uuid-Cl5lrJ4c.js";import"./LayerFloorInfo-CaDhQ13a.js";import"./Relationship-BbHEzW7a.js";import"./serviceCapabilitiesUtils-zIMP847t.js";import"./editsZScale-DZUJrfn7.js";import"./APIKeyMixin-CXlWrzlh.js";import"./ArcGISService-CSV0jb9-.js";import"./CustomParametersMixin-CTrVGLLT.js";import"./EditBusLayer-Z9Kr3cmv.js";import"./FeatureEffectLayer-WpwFKfa7.js";import"./FeatureEffect-DmRrP0eE.js";import"./FeatureReductionLayer-C5VCIS3_.js";import"./FeatureReductionSelection-CLrQGUM9.js";import"./labelingInfo-FimPvlW3.js";import"./labelUtils-D4Z-URWW.js";import"./MD5-C9MwAd2G.js";import"./OperationalLayer-BqKvdtee.js";import"./OrderedLayer-BxwxFK4a.js";import"./OrderByInfo-B2POnA3F.js";import"./PortalLayer-hGfufuVG.js";import"./RefreshableLayer-CGuxfevt.js";import"./TemporalLayer-BFUu-J79.js";import"./FeatureTemplate-h1_gjiLZ.js";import"./FeatureType-mmVVrelu.js";import"./fieldProperties-BisedSGo.js";import"./versionUtils-03-p73ku.js";import"./styleUtils-YtuMlLaM.js";import"./popupUtils-Cj-AZhjO.js";import"./AlphaCutoff-UcccL64p.js";import"./NetworkElement-xemfa5ne.js";async function nt(i,t,a){const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s={...r,returnEdits:!0,f:"json"},p=n({...e.query,...s}),o=m(p,{...a,method:"post"}),u=`${e.path}/validateNetworkTopology`,{data:c}=await l(u,o);return k.fromJSON(v(c))}async function lt(i,t,a){if(!t.gdbVersion)throw new f("submit-validate-network-topology-job:missing-gdb-version","version is missing");const e=d(i),r=t.toJSON();t.validationSet&&(r.validationSet=JSON.stringify(t.validationSet));const s=m(e.query,{query:n({...r,returnEdits:!0,async:!0,f:"json"}),...a,method:"post"}),p=`${e.path}/validateNetworkTopology`,{data:o}=await l(p,s);return o?o.statusUrl:null}function v(i){return i.serviceEdits&&(i.serviceEdits=i.serviceEdits.map(t=>(t.editedFeatures.spatialReference&&(t.editedFeatures.spatialReference={wkid:t.editedFeatures.spatialReference.wkid,wkt:t.editedFeatures.spatialReference.wkt,wkt2:t.editedFeatures.spatialReference.wkt2,latestWkid:t.editedFeatures.spatialReference.latestWkid,latestVcsWkid:t.editedFeatures.spatialReference.latestVcsWkid,vcsWkid:t.editedFeatures.spatialReference.vcsWkid}),t={layerId:t.id,editedFeatures:t.editedFeatures}))),i}export{v as handleValidateNetworkTopologyResult,lt as submitValidateNetworkTopologyJob,nt as validateNetworkTopology};
//# sourceMappingURL=validateNetworkTopology-CCsIAIgM.js.map
