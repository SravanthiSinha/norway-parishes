import{w as s,I as m,b8 as p}from"./index-XUmwAfbD.js";import{p as n}from"./MeshVertexAttributes-Bapgw4Jk.js";import{B as a}from"./vertexSpaceConversion-BJhxD1Gb.js";import"./mat3-CYE1QlB-.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./vec32-BE12nxNw.js";import"./spatialReferenceEllipsoidUtils-D5wmSoVV.js";import"./computeTranslationToOriginAndRotation-CHWS5ji-.js";import"./projectPointToVector-iYrOeHlc.js";import"./meshVertexSpaceUtils-Dy2j7K2j.js";import"./MeshLocalVertexSpace-CwMXqBNE.js";import"./vec3-ChSqWDAE.js";import"./BufferView-Bn6J4Bmt.js";import"./vec4-32PHRysu.js";async function S(t,o,r){await Promise.resolve(),s(r);const e=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!e)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...e,uv:p(t.vertexAttributes.uv),color:p(t.vertexAttributes.color)}),o);return i.transform=null,i}export{S as convertMeshVertexSpace};
//# sourceMappingURL=convertMeshVertexSpace-LuC_MFeL.js.map
