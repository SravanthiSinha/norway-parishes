import{v as m,d4 as a,ae as g,c1 as l,av as h,j as s,m as c,k as n}from"./index-BB6xpuj5.js";import{j as d,y as u}from"./LayerView-C9uOes3C.js";import{t as w}from"./GraphicContainer-CejLQHw-.js";import{F as y}from"./GraphicsView2D-FXKEKrJx.js";import{e as V}from"./HighlightCounter-Czi-fdpx.js";import"./utils-BQBvadb7.js";import"./Container-CzB7Zj09.js";import"./MapView-BB5zyy98.js";import"./CollectionFlattener-vw9PCdEV.js";import"./TileInfo-DckZPgmV.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-zVWkHYEv.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-DP1x1Bsi.js";import"./signal-JD86_R7M.js";import"./ColorBackground-5boBVQCV.js";import"./basemapUtils-DT7CgBiu.js";import"./utils-Dmn_mtNQ.js";import"./TablesMixin-rUkw-8tc.js";import"./Layer-5zl9d9z3.js";import"./GraphicsCollection-BlSm0Gtj.js";import"./HeightModelInfo-Cn8WVYm1.js";import"./ReactiveMap-C5xyLUPa.js";import"./a11yUtils-XrMtlS1N.js";import"./ViewingMode-dBUh39ak.js";import"./mat2df32-orApM5a3.js";import"./mat3-DJqSU6w-.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CoC6AtxP.js";import"./Tile-CSO7o2Lx.js";import"./TileKey-bsr5k5kR.js";import"./QueueProcessor-DuXSk4nk.js";import"./quickselect-QQC62dOK.js";import"./vec32-Dn1yeTzb.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-BzN5lHkh.js";import"./imageUtils-DlrOtbVu.js";import"./capabilities-A2uoe7dc.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-CZa70j6i.js";import"./accessibleHandler-D95E-zHd.js";import"./GoTo-CVPsm2b2.js";import"./ZoomViewModel-CECqLXXU.js";import"./EffectView-ByR8_5fn.js";import"./parser-Bf0eM-Za.js";import"./layerViewUtils-CcnERjia.js";import"./AGraphicContainer-W19VHD7K.js";import"./TechniqueInstance-C_8TZDcA.js";import"./UpdateTracking2D-eAHQ9B1z.js";import"./BindType-BmZEZMMh.js";import"./Util-CB3Gd6Qy.js";import"./Program-0OZM0gHS.js";import"./BufferObject-C7inN83X.js";import"./LabelMetric-C8LidgNF.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./TileContainer-BXFytAM8.js";import"./WGLContainer-DtgvS25h.js";import"./VertexArrayObject-C34nLg7v.js";import"./ProgramTemplate-BeeJCxBw.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-Bx5E0gVl.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-L6p5wBVT.js";import"./FeatureCommandQueue-9w2UUk_3.js";import"./CIMSymbolHelper-41U55g81.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-3KqT7etV.js";import"./GeometryUtils-CoU-W_YD.js";import"./Rect-CUzevAry.js";import"./constants-F8oTIn7N.js";import"./AttributeStore-KxhCcAOR.js";import"./TimeOnly-DIyoNsbt.js";import"./timeSupport-DrDUNSUJ.js";import"./labelUtils-CfVEjBe_.js";import"./normalizeUtilsSync-CvBZNtZ1.js";let o=class extends d(u){constructor(){super(...arguments),this._highlightCounter=new V}attach(){this.graphicsView=new y({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new w(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlights()}detach(){this.container.removeAllChildren(),this.graphicsView=m(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="default"){let r;typeof i=="number"?r=[i]:i instanceof a?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):g.isCollection(i)&&i.length>0&&(r=i.map(e=>e&&e.uid).toArray());const p=r==null?void 0:r.filter(l);return p!=null&&p.length?(this._addHighlight(p,t),h(()=>this._removeHighlight(p,t))):h()}_addHighlight(i,t){this._highlightCounter.addGroup(i,t),this._updateHighlights()}_removeHighlight(i,t){this._highlightCounter.deleteGroup(i,t),this._updateHighlights()}_updateHighlights(){var t;const i=[];for(const r of this._highlightCounter.ids()){const p=this._highlightCounter.getHighlightGroups(r),e=this._getHighlightBits(p);i.push({objectId:r,highlightFlags:e})}(t=this.graphicsView)==null||t.setHighlight(i)}};s([c()],o.prototype,"graphicsView",void 0),o=s([n("esri.views.2d.layers.GraphicsLayerView2D")],o);const Ki=o;export{Ki as default};
